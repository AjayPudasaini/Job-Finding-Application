# Generated by Django 3.0.9 on 2020-08-08 12:03

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_employer', models.BooleanField(default=False)),
                ('is_jobseeker', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(choices=[('AR', 'Architecture/Interior Designing'), ('CE', 'Construction/Engineering'), ('CL', 'Commercial/Logistics'), ('CGD', 'Creative/Graphic/Designing'), ('HP', 'Hospilaty'), ('NGO', 'NGO/INGO/Social Work'), ('TE', 'Techng/Education'), ('GM', 'General MGMT./Administration/Operations'), ('HPBM', 'Healthcare/Pharma/Biotech/Medical'), ('HRD', 'Human Resources/ Org.Development'), ('SP', 'Sales/Public Relations'), ('RD', 'Research and Development'), ('PMQ', 'Production/Maintenance/Quality'), ('MAC', 'Marketing/Advertisement/Custom service'), ('LS', 'Legal Services'), ('AF', 'Accounting/Finance'), ('BIF', 'Banking/Insurance/Finance Services'), ('FT', 'Fashion/Textile Designing'), ('SFD', 'Secretarial/Front Office/Data Entry'), ('IT', 'IT & Telecommunication'), ('PS', 'Productive/Securaty Service'), ('JE', 'Journalism/Editor/Media'), ('O', 'Others')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='JobseekerProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('FirstName', models.CharField(max_length=30)),
                ('LastName', models.CharField(max_length=30)),
                ('Gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=6)),
                ('DateOffBorth', models.DateField()),
                ('MarrigeStatus', models.CharField(choices=[('single', 'single'), ('married', 'married')], max_length=7)),
                ('Religion', models.CharField(choices=[('HI', 'Hinduism'), ('BU', 'Buddhism'), ('CH', 'Christianity'), ('IS', 'Islam'), ('SI', 'Sikhism'), ('JA', 'Jainism'), ('O', 'Others')], max_length=2)),
                ('PhoneNumber', models.CharField(max_length=20)),
                ('Email', models.EmailField(max_length=30)),
                ('Nationality', models.CharField(max_length=1)),
                ('CurrentAddress', models.CharField(max_length=100)),
                ('PernamentAddress', models.CharField(max_length=100)),
                ('ProfileImage', models.ImageField(upload_to='Profile_Pictures')),
                ('Education', models.CharField(choices=[('Intermidate Level Complete', 'Intermidate Level Complete'), ('Bacholer Running/Complete', 'Bacholer Running/Complete'), ('Master Running/Complete', 'Master Running/Complete'), ('Ph. D. Running/Complete', 'Ph. D. Running/Complete'), ('OTHER', 'OTHER')], max_length=26)),
                ('EducationProgram', models.CharField(max_length=200)),
                ('EducationBoard', models.CharField(choices=[('NB', 'NEB'), ('TU', 'Tribhuvan Univercity'), ('MWU', 'Mid-Westran Univercity'), ('AFU', 'Architure and Forestry Univercity'), ('NOU', 'Nepal Open Univercity'), ('PU', 'Pokhara Univercity'), ('NSU', 'Nepal Sanskrit Univercity'), ('NBU', 'Lumbini Buddhist Univercity'), ('FWU', 'Far-Western Univercity'), ('KU', 'Kathmandu Univercity'), ('PU', 'Purbanchal Univercity'), ('O', 'Others')], max_length=3)),
                ('NameOfInstitute', models.CharField(max_length=200)),
                ('WorkingExperience', models.IntegerField(default=0)),
                ('WorkedCompanyName', models.CharField(max_length=200)),
                ('WorkedCompanyWebsite', models.URLField()),
                ('Language', models.CharField(choices=[('NP', 'Nepali'), ('EN', 'English'), ('O', 'Others')], max_length=2)),
                ('AboutMe', ckeditor.fields.RichTextField()),
                ('Facebook', models.URLField(max_length=100)),
                ('Twitter', models.URLField(max_length=100)),
                ('Instagram', models.URLField(max_length=100)),
                ('UploadCv', models.FileField(upload_to='CVs')),
                ('JobCategory', models.ManyToManyField(to='account.Category')),
                ('MySkill', models.ManyToManyField(to='account.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='EmployerProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('CompanyName', models.CharField(max_length=30)),
                ('CompanyLogo', models.ImageField(upload_to='Company_Logos')),
                ('CompanyOwnership', models.CharField(choices=[('PU', 'Nepali'), ('EN', 'English')], max_length=2)),
                ('CompanyWebsite', models.URLField(max_length=100)),
                ('CompanyEstablishDate', models.DateField()),
                ('aboutCompany', ckeditor.fields.RichTextField()),
                ('CompanyAddress', models.CharField(max_length=100)),
                ('TelNo', models.CharField(max_length=15)),
                ('MobileNo', models.CharField(max_length=15)),
                ('Facebook', models.URLField(max_length=100)),
                ('Twitter', models.URLField(max_length=100)),
                ('Instagram', models.URLField(max_length=100)),
                ('FirstName', models.CharField(max_length=30)),
                ('LastName', models.CharField(max_length=30)),
                ('PhoneNumber', models.CharField(max_length=20)),
                ('Email', models.EmailField(max_length=30)),
                ('CompanyCategory', models.ManyToManyField(to='account.Category')),
            ],
        ),
    ]
